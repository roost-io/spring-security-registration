// ********RoostGPT********
/*
Test generated by RoostGPT for test spring-security using AI Type Azure Open AI and AI Model roostgpt-4-32k

ROOST_METHOD_HASH=uaParser_4afc4daabf
ROOST_METHOD_SIG_HASH=uaParser_6a1ab25d7d

Scenario 1: Test if method returns a Parser object

Details:
  TestName: methodReturnsParserObject.
  Description: This test checks if the method returns a Parser object as expected.

Execution:
  Arrange: No setup is required because this method doesn't take any parameters and doesn't make use of class fields.
  Act: Invoke the uaParser method.
  Assert: Assert that the return value of the method is an instance of Parser.

Validation:
  The assertion checks if the object returned by the method is of type Parser. The expected result is that the type of the returned object is Parser because the function's implementation suggests that it should return a new instance of Parser. This test is significant as it verifies the basic functionality of the uaParser method.

Scenario 2: Test if method returns new Parser object each time

Details:
  TestName: methodReturnsNewObjectEachTime.
  Description: This test checks if the method returns a new Parser object each time it is called.

Execution:
  Arrange: No setup is required as there is no change in the state of the objects.
  Act: Invoke uaParser method twice.
  Assert: Assert that the two returned objects are different.

Validation:
  The assertion checks whether the two Parser instances are different. The expected result is that they should be different because the method is expected to create and return a new Parser instance on each method call. This test is crucial to ensure that the Parser instances do not interfere with each other.

Scenario 3: Test if Parser object is not null

Details:
  TestName: parserObjectIsNotNull.
  Description: This test will verify that the method does not return a null Parser object.

Execution:
  Arrange: No data or objects are required to be set up.
  Act: Invoke the uaParser method.
  Assert: Assert that the return value of the method is not null.

Validation:
  The assertion confirms that the returned Parser object is not null. The expected outcome is that the uaParser method won’t return a null object but a new instance of the Parser class every time it’s invoked. This test is important to assure that the uaParser method is correctly instantiated and returns a Parser object.
*/

// ********RoostGPT********
package com.baeldung.spring;

import org.junit.Test;
import ua_parser.Parser;
import static org.junit.Assert.*;
import com.maxmind.geoip2.DatabaseReader;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.util.ResourceUtils;
import java.io.File;
import java.io.IOException;

public class LoginNotificationConfigUaParserTest {

	@Test
	public void methodReturnsParserObject() {
		LoginNotificationConfig loginNotificationConfig = new LoginNotificationConfig();
		assertTrue(loginNotificationConfig.uaParser() instanceof Parser);
	}

	@Test
	public void methodReturnsNewObjectEachTime() {
		LoginNotificationConfig loginNotificationConfig = new LoginNotificationConfig();
		Parser firstInstance = loginNotificationConfig.uaParser();
		Parser secondInstance = loginNotificationConfig.uaParser();
		assertNotSame(firstInstance, secondInstance);
	}

	@Test
	public void parserObjectIsNotNull() {
		LoginNotificationConfig loginNotificationConfig = new LoginNotificationConfig();
		assertNotNull(loginNotificationConfig.uaParser());
	}

}
