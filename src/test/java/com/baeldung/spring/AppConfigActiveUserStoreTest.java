// ********RoostGPT********
/*
Test generated by RoostGPT for test spring-security using AI Type Azure Open AI and AI Model roostgpt-4-32k

ROOST_METHOD_HASH=activeUserStore_ff14ae2ac0
ROOST_METHOD_SIG_HASH=activeUserStore_ba0fd6c6be

"""
Scenario 1: Test to ensure an instance of ActiveUserStore is returned

Details:
  TestName: testActiveUserStoreInstance.
  Description: This test aims to validate whether or not the method ‘activeUserStore’ is generating and returning a new instance of ActiveUserStore.
Execution:
  Arrange: No setup required.
  Act: Call the method activeUserStore().
  Assert: Verify if the returned object is an instance of ActiveUserStore class.
Validation:
  If activeUserStore method is correctly working, it should generate and return an instance of the ActiveUserStore class. Failure of this test indicates the method has a bug and is not able to generate instance as intended.

Scenario 2: Test to check if a new instance of ActiveUserStore is created each time

Details:
  TestName: testActiveUserStoreNewInstanceCreated.
  Description: This test aims to validate whether or not the method ‘activeUserStore’ is creating a new instance of ActiveUserStore every time it is invoked.
Execution:
  Arrange: No setup required.
  Act: Call the method activeUserStore() twice.
  Assert: Assert that the two returned objects are not the same.
Validation:
  This assertion aims to verify that each call to the method activeUserStore creates a distinct instance of ActiveUserStore. This is significant to ensure that every invocation of the method generates its own context and does not use an existing one.

Scenario 3: Test to ensure Non-null instance of ActiveUserStore is returned

Details:
  TestName: testActiveUserStoreNonNullInstance.
  Description: This test aims to validate whether or not the method ‘activeUserStore’ is returning a Non-null instance of ActiveUserStore.
Execution:
  Arrange: No setup required.
  Act: Call the method activeUserStore().
  Assert: Verify if the returned object instance is not null.
Validation:
  This assertion aims to verify that the method activeUserStore doesn't return a null. It is a basic sanity test to ensure that the method is functional and not resulting in a null value.
"""
*/

// ********RoostGPT********
package com.baeldung.spring;

import com.baeldung.security.ActiveUserStore;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.assertTrue;
import org.junit.Test;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

public class AppConfigActiveUserStoreTest {

	@Test
	public void testActiveUserStoreInstance() {
		ActiveUserStore activeUserStore1 = this.activeUserStore();
		assertTrue(activeUserStore1 instanceof ActiveUserStore);
	}

	@Test
	public void testActiveUserStoreNewInstanceCreated() {
		ActiveUserStore activeUserStore1 = this.activeUserStore();
		ActiveUserStore activeUserStore2 = this.activeUserStore();
		assertNotSame(activeUserStore1, activeUserStore2);
	}

	@Test
	public void testActiveUserStoreNonNullInstance() {
		ActiveUserStore activeUserStore1 = this.activeUserStore();
		assertNotNull(activeUserStore1);
	}

	public ActiveUserStore activeUserStore() {
		return new ActiveUserStore();
	}

}
